defmodule BitcoinTest do
  use ExUnit.Case

  doctest Bitcoin

  test "Secp256k1Test" do
  {public_key, private_key} = :crypto.generate_key(:ecdh, :secp256k1)
  public_key = public_key |> Base.encode16()
  signature = :crypto.sign(:ecdsa,:sha256,"hello",[private_key,:secp256k1]) |> Base.encode16()
  assert TX_Valid.check_signature_one_to_one(signature,public_key) == 1

  end

  test "Block-chain correctness" do
  blocks = [
  {"PID<0.125.0>",
   {"010F 01000000000000000000000000000000000000000000000000000000000000000000000004f316f34f51546b3f275451369f71f8533253c68256845099b36d319a372e82323031382d31312d32362032323a34353a30322e3035343030305a000fffff00000267 1 8C22D3EF2E4A1B68C17EC5E9931114B6B2D663F1CAF851D935B2EE85D1F1A989"}},
  {"PID<0.125.0>",
   {"010F 01000000d451ff768b2a4ff3b762e28ee1cab554c1534638adc7531f55414032ad6f50f9d386962dabcd500f5467a7e39577bc8c25dc34a665fe6b49a802f8bf4a5427d7323031382d31312d32362032323a34353a30322e3038303030305a000fffff0000047A 1 30E5830FB7225C66D8946D407736DD8C35FA9CCCD0AECE96FD7236CED8E0C2B0"}},
  {"PID<0.125.0>",
   {"010F 0100000065cb89af86a3931eb6db298da9bf0ad5c9c988fc07d0bbeefc06abbc52913aafcce8431b95c84c34c1962067511b2228bea4b4696c2c4511faaf807f114bb9d4323031382d31312d32362032323a34353a30322e3131373030305a000fffff00000559 1 CCE8431B95C84C34C1962067511B2228BEA4B4696C2C4511FAAF807F114BB9D4"}},
  {"PID<0.125.0>",
   {"010F 01000000cb3fd90344e8c135a89b3a4b401c01af7e028e0d01f9ecddd19d537b5ac54fa2e0969b40f8bd8da8c346919c89dbcd2f65caab88b7cb108a9e629a60749b1dbf323031382d31312d32362032323a34353a30322e3136353030305a000fffff00000345 1 8A7D4080220D313BFDCC6ADA3160574F3FF3AC52A175BECE1E7EF205AA5D7F34"}},
  {"PID<0.125.0>",
   {"010F 010000008c8ed5fa5cf6cb10b4bc3febdc1803279a96346c2f17ebaea49379fd610a3b62d21e6a05cc1af3cf8667567d3ca98b8d52612fb3384114dbf15fd06200ef42eb323031382d31312d32362032323a34353a30322e3138393030305a000fffff0000033D 1 874B318FABEAC9AEDB4E45EDF798B93E60E307C38560214634264AE4A65D7D6E"}},
  {"PID<0.125.0>",
   {"010F 010000007fb303f7e3591bed0c726589b137ad375c17ae21c83d79b0f099080f1d28a61bb72756ebe10a728913c6abc73aba7016699f84e1d23bc649e7f6a1c4fab1632f323031382d31312d32362032323a34353a30322e3231333030305a000fffff0000025E 1 8B4102EECE1D02351324539B4D17183F57E282F28AC7FFD942D4C721E7F1E655"}},
  {"PID<0.125.0>",
   {"010F 01000000a192fb64948d28f08880d28dddd0d938d5bc00fd7fcea48cc76b475b24791f29ea7120066756cd2d143e27ede175a8f686b8823fdf9de6e59832fe98f8a25dbd323031382d31312d32362032323a34353a30322e3232363030305a000fffff0000025A 1 1E11789A53143ED51BC757437AD9282F0A100748C9889A648BE70163763F51F3"}},
  {"PID<0.125.0>",
   {"010F 01000000aa24edd0ad803e964d1fe958f30206159bf20763546e363f332dd938f6cafe34ef753b1252a42214a587f31ac8f016dd29cdeba172c04f83dffd7ac2e8ad9529323031382d31312d32362032323a34353a30322e3233353030305a000fffff0000030B 1 D866DE2C0116094C8A0000C128BE6C26CB09B8099ED10A8DC13C92A1BA261D50"}},
  {"PID<0.125.0>",
   {"010F 0100000016f4155cd6f6f063def84fc6c2b5c6365c86f522ded2fe1514c340e928d51e9e1c44988aa44f77907cdd84388f6cce07ca39142703a20d5ec1e508eb3729a4e9323031382d31312d32362032323a34353a30322e3235363030305a000fffff00000259 1 08F434FE9C25CE2CF43EE9C6D2474C84FDC5AB49D30244D7F1BB8FADAD6B7000"}},
  {"PID<0.125.0>",
   {"010F 01000000d701b076ef3a198fbd671eb3428e8afa0cd61b52a8d0618e556de1e3340d0e13f808086f7cf7cd25715ade5b4465578e289054b15ccb79fbe16a24a7dded78e7323031382d31312d32362032323a34353a30322e3236373030305a000fffff00000279 1 568375D54F280EDD3E031B98803AF99CF5445D6CB5FBFFA543C9598A24F879E0"}},
  {"PID<0.125.0>",
   {"010F 01000000147abbd6bc8b8dff7deb072bb67f7cface6fc919d283432b8efb5a2e30966d412374af06ee832957a12ed10339ea0f583700105356abe02b0598e8cccc4b7e05323031382d31312d32362032323a34353a30322e3238303030305a000fffff000002A6 1 20AB81D193D69D7CE2D7F3475A625F54D5207BEFCBA47AD6E25141D80A2EB3C4"}}
]
    if assert  Bitcoin.check_block_correctness(blocks) == 1 do
      IO.puts "----Valid Blockchain"
    end
  end

  test "Transaction-chain correctness" do

    transactions =[
      {"PID<0.125.0>",
     {"37A9FA5A46D7F59B80AFB1B98C52DFFF33058E98D887BB34DA6A0462A6BC78F8",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3235373030305A0000000000000000000000000000000000000000000000000000000000000000000000003045022100D12872F31523ACC084AA313EA0A58A8F71141F7687F17A214E4F5C07DC3DB16B0220401D49AEF842EBBBFE3D5C08734905EA171CC2451C9545CFEB3B887302239C4A04B1B1BBDDAB3170C1EAF22164E0DA9340230FD9191911D85892951F64B8B08B7521A858762E41835DE8A93E0FFF6E961002A6D6983674A6C0AD2D5B55D531618A0000000AOP_DUP OP_HASH1609C33C3468093A5205B01C794E3FF16E1AF45439EOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"96B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C954",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3330343030305A37A9FA5A46D7F59B80AFB1B98C52DFFF33058E98D887BB34DA6A0462A6BC78F8000000003045022020E0225966D6429B7829D7CE26DB022E539E990ABCF2CFC67C1FC820FDBCFA8602210084A6407AAC60554DD892DB463BF77C018B5B700886AB80560ED7552438D3436F04D23488A7C365944C15C3B93CB7EECAB06E3AC97A4B27017A2757E438B7D761F72E6ED6FEAC603D5178404FFB807261CF23F2E5C21C37E189A7133F165C1CE29C00000000OP_DUP OP_HASH1600B1F40E16CF7D79B1BF29A3718B0D5C9EC60BFFCOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"6F55FA413AEC3EB59E6EB88B1B934DEB00F02DF23D0365FFC5ADD000CAB23ABC",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3333383030305A96B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C954000000003045022100D217D2E29529874F75985EB6023C5DB45250B2D8967B9AC38D2369DE66C1467C0220182832E5EDAAD3E671D2D5F6A2F4F9793DF8A6CA92A4B72843BF845294B5F60F043CF6CF47839EFF29DC80A7E4902B83FAF5C3903EAD8E45666CBEDA33469927FA0CE0CA8E81998822CBAC18355F4F48DEF83F17BAF770403473604D924855F8C700000000OP_DUP OP_HASH1609C33C3468093A5205B01C794E3FF16E1AF45439EOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A54",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3336343030305A6F55FA413AEC3EB59E6EB88B1B934DEB00F02DF23D0365FFC5ADD000CAB23ABC000000003044022019EAF5015E5F008CB02B0ADEB8E7030E74B1A83FF16F38FF29A9B08B30D45BDB022009E85C090685583D960F2341542506899E64AF47319320F53E79A7C1D6A04A4704D23488A7C365944C15C3B93CB7EECAB06E3AC97A4B27017A2757E438B7D761F72E6ED6FEAC603D5178404FFB807261CF23F2E5C21C37E189A7133F165C1CE29C00000000OP_DUP OP_HASH1600B1F40E16CF7D79B1BF29A3718B0D5C9EC60BFFCOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"F7B77D8272D847A9408C2CAB44B1A80BDC35407C4D9F9A234FCADF0FBC979CB4",
      "000000000000000400000001323031382D31312D32362032333A30303A30302E3338383030305A96B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C9540000000096B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C95400000001700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A5400000000700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A5400000001304502201BC3D7EEFBB10E9C852B470E250ED8BD6C0BA4D995664CE07F4B843A76D40E40022100AD4B7829C2AEE734C080AD8333B3D009F412F7CE7CAEE2FF60713EDB90919ACD04B1B1BBDDAB3170C1EAF22164E0DA9340230FD9191911D85892951F64B8B08B7521A858762E41835DE8A93E0FFF6E961002A6D6983674A6C0AD2D5B55D531618A00000009OP_DUP OP_HASH1600DB51D19FE268A92E5696D0E03F323C0ED007979OP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"DC7D2C69E102257DE9EA798B96BBAE09EB2BFF9CC3E59DE8FE730839924036C9",
      "000000000000000400000001323031382D31312D32362032333A30303A30302E3432333030305A96B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C9540000000096B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C95400000001700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A5400000000700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A540000000130440220153FBBF4F0D684A0C0DDEB84B78C3DB5E59841C29D42E85E935D8627F86AA8060220071224F3341EC3CEFD04EF8F56AB68C9970390A4E113E904016BF052EC8590B104B1B1BBDDAB3170C1EAF22164E0DA9340230FD9191911D85892951F64B8B08B7521A858762E41835DE8A93E0FFF6E961002A6D6983674A6C0AD2D5B55D531618A00000009OP_DUP OP_HASH1609C33C3468093A5205B01C794E3FF16E1AF45439EOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"222A6D735094639E127BF9AE0BDB25DA516771461A5BCD98C1E91CD176D21DCE",
      "000000000000000400000001323031382D31312D32362032333A30303A30302E3437363030305A96B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C9540000000096B4E9CE1AF9218C6A601F5622E793FBF902DFAB288984AF68D405A46181C95400000001700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A5400000000700E32499658BC3C94AC1C5BC25B2E268C21864B9875D860B39B910F326C5A540000000130460221009874E1ABBC30F1BB12B5A9F0018BD2588E8BF04BF0CDA1D9208C4F6E20E6DF8F0221009AACEC934C41384A924E613C4DF7A6B308A73F3934F232DAF1D3602D0EFA007404B1B1BBDDAB3170C1EAF22164E0DA9340230FD9191911D85892951F64B8B08B7521A858762E41835DE8A93E0FFF6E961002A6D6983674A6C0AD2D5B55D531618A00000009OP_DUP OP_HASH160396344083E85288A4482821FB9BDFD4BA5EFDECEOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"9F4653224A243DAE08BB34861FC2E5258A99549FE8C2048DA8620A02CDECE76F",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3536313030305A222A6D735094639E127BF9AE0BDB25DA516771461A5BCD98C1E91CD176D21DCE00000000304502205F2A350404732E62874BF7581B10E9AACE2D43F6140BDC376D7798A9AF1941C6022100DBC8A00304C1506C0EC9FCEE4B998C7D11C87BAF507E364F4C4086DE81DD3AA7043CF6CF47839EFF29DC80A7E4902B83FAF5C3903EAD8E45666CBEDA33469927FA0CE0CA8E81998822CBAC18355F4F48DEF83F17BAF770403473604D924855F8C700000001OP_DUP OP_HASH1600B1F40E16CF7D79B1BF29A3718B0D5C9EC60BFFCOP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"A33117784DCF6112459CF857722711EAF27773EB417D0F81FBFF5AB89DC32A4D",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3539393030305A9F4653224A243DAE08BB34861FC2E5258A99549FE8C2048DA8620A02CDECE76F000000003046022100BD43A140153DAC7E12D5A472774671A0C4C36D7861457BD83279ACCE084E028A022100C541E2B6842D1834474903228BA03C603CCFFA634AA12F1F1DC26EF2B21722AD04CB7AF3BEE630553B29017C51D2DCD31BDF75641013673F73C51E16DFA3AC25778DF856C4FE4270A52E5DD5BB70C6FC22A71025BD8BFE8B99489BC68E84B9934500000001OP_DUP OP_HASH1607509753714C45166118CE25F6C1D655D01B51D86OP_EQUALVERIFY OP_CHECKSIG"}},
    {"PID<0.125.0>",
     {"3D140AE633D9DAD1E680B5501BA3683362BDB9F4C0A3F1F7BC7BD7B4F68FE69F",
}},
    {"PID<0.125.0>",
     {"90EEA990C4F5D679634CA9123D0077A4B15A8B801771ABB0339024971F638B25",
      "000000000000000100000001323031382D31312D32362032333A30303A30302E3636333030305A3D140AE633D9DAD1E680B5501BA3683362BDB9F4C0A3F1F7BC7BD7B4F68FE69F00000000304502201F8598C8A84ACEBDA9C66D7E29F0015A37CB64807A2CB7C8122CF19D996CACA7022100E1D2354167A380CC635586B58A0404AA837812E7C4F9A1F642E1661B246E3D4F04B20C1A9544438940EA45B29051FEA3CDA2A2EA8CD0F21D5542703E28FEE7B9D0095746B4A5F0E7F0DCE102F6207A7ECF0C54DDEF10530C3C12C412423DD6EF9D00000001OP_DUP OP_HASH1607509753714C45166118CE25F6C1D655D01B51D86OP_EQUALVERIFY OP_CHECKSIG"}}
   ]
  if assert Bitcoin.check_transaction_correctness(transactions) == 1 do
    IO.puts "----Valid Transaction Blocks."

  end
  end

  test "Sufficient Balance check" do
    paying = 1000
    balance = 500
    if assert TX_Valid.tx_check_one_to_one(balance,paying) == 0 do
      IO.puts "----Insufficient Balance ! Transaction failed."
    end

  end

  test "PubKey Script Validation" do
   scriptPubKey = "OP_DUP OP_HASH16006E5D7DAE8255DB313D29072C12C0971EE30DE7FOP_EQUALVERIFY OP_CHECKSIG"
   public_key = "04C83F57AB78AFC7601A367F1855FA1FF4F73946AAD9D13B7F0B4D52822D4EA296C625C50A8EF71060F42D029A98665BA8BA7C39DE9BF4414CEDC38733529C3BF6"
   assert TX_Valid.check_pubKeyScript_one_to_one(public_key,scriptPubKey) == 1
  end

  test "nonce gives target zeros in header" do
    header = "01000000daf21abf3fa461835c7ea0ec875a58feb57c0e0c490bd72bc06a5ebcfc1c70fb842df2b704257d9bfa9d872baf45e0b162f97963b163f58792424297b89fc255323031382d31312d32362032333a32363a31372e3538303030305a000fffff"
    nonce = 731
    difficulty = 2
    index = Enum.random(1..100)
    pid = "#PID<0.125.0>"

    if assert BTC_Node.validator(pid,index,nonce,difficulty,header) == [index,-2] do
      IO.puts "----Nonce is correct. Gives corect number of zeros swhen hashed with header."

    end

  end

  test "make even before taking merkle root" do
      transactions =  ["29A0DBE35B23BDD65257C57723F20C7FCF5F3D97781F50ADD6822F9CFE648C270000000030460221009F59C360A65DD764DA0595091D42CB997103903C7E675F311D7FE13984F289B40221009742EE38C6BE513BF2A0AC2CA363BFFFB3593E5090E67037A8D4283DEB2E1FBB04DA6DAF8EA171CAA01CFE6325E71F1A88019969EC2384E5F61A295066A636DED516519A399E9BF08D8A8DE19A13A0240466DDB102BC0F1BAEB93A19C1BA68389700000000OP_DUP OP_HASH16060F3FB482D6C14FE29DF0057842F3C87AE2D0141OP_EQUALVERIFY OP_CHECKSIG"]
      old_size = Enum.count(transactions)
      new_transactions = Miner.make_even(transactions)
      new_size = Enum.count(new_transactions)
      if rem(old_size,2) == 0 do
        assert old_size == new_size
        IO.puts("----already even")
      else
        assert old_size == new_size - 1
        IO.puts("----now it is even")
      end

  end

  test "hash 256" do
    string = "abcdefgh"
    hash =  :crypto.hash(:sha256,string)
    if assert BTC_Node.hash(string,:sha256)  == hash do
      IO.puts "----correct hash"
    end
  end

  test "Bitcoin wallet correctness" do
  assert  Bitcoin.main(10) == :ok

  end

  test "Genesis Transaction" do
    assert  Bitcoin.main(10) == :ok

  end

  test "1 Node in Network Transaction" do
    assert  Bitcoin.main(1) == :error

  end

  test "RIPEMD-160 HASH correctness check" do
    {public_key, private_key} = :crypto.generate_key(:ecdh, :secp256k1)

    public_hash =   :crypto.hash(:ripemd160,:crypto.hash(:sha256,public_key))
    if assert BTC_Node.calculate_public_hash(public_key) == public_hash do
      IO.puts("RIPEMD 160 hash correctly calculated")
    end
  end

end
